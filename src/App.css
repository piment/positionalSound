@font-face {
  font-family: 'Chopper';
  src: url(./assets/Chopper.ttf) format('truetype')
}
* {
  box-sizing: border-box;
}

html,
body,
#root {
  width: 100vw;
  height: 100lvh;
  margin: 0;
  padding: 0;
  overflow: hidden;
}

body {
  font-family: 'Inter var', sans-serif;
  color: white;
  background: #000000;
  user-select: none;
}



a {
  pointer-events: all;
  cursor: pointer;
  color: inherit;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
  color: inherit;
}
.main{  width: 100vw;
  height: 100vh;
  top: 0;
position: absolute;
}
.div-float{
  position: absolute;
}

.canvas-main{
  width: 100vw; 
  height: 100dvh;
  position: fixed;
  top: 0;
  /* z-index: 1; */
  /* /* border: red solid 2px; */
  /* display: flex; */
  /* flex: 1; */
  /* background-color: red; */
}

.panel-left{
  position: fixed;
  z-index: 10;
  top: 20%;
  overflow: scroll;
}

.panel-right{
  position:absolute;
  top:55%;
  right: 0;
  width: 25%;
  height: 40%;
  display: flex;
  flex-direction: column;
  overflow: scroll;
}

.rev-params{
  display: flex;
  position: absolute;
  height: 10vh;
  width: 100%;
  z-index: 40;
  /* background-color: aqua; */
}

.rev-sliders{
  display: flex;
}

.param {
  display: flex;
  width: 15vw;
  flex-direction: column;
  background: transparent;
}

.console-container {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  /* z-index: 10; */
}

.toggle-button {
  position: absolute;
  top: -3.5dvh; /* Adjust as needed */
  left: 50%;
  transform: translateX(-50%);
  background-color: #1a19197a;
  width: 5vw;
  color: white;
  border: none;
  padding: 0.3em 0.6em;
  border-radius: 5px 5px 0 0;
  cursor: pointer;
  z-index: 101;
  box-shadow: rgba(15, 15, 15, 0.281) 0px 5px 10px 10px;
}

.toggle-button:focus {
  outline: none
}

.track-console {
  height: 0;
  overflow-x: auto;
  transition: height 0.3s ease;
  background: #181818;
  border-top: 1px solid #444;
  display: flex;
  align-items: center;
  padding-left: 1em;
  z-index: 100;
}

.track-console.open {
  height: 30vh;
}




/* Keep drawer as before */
.spawner-container {
  position: absolute;
  /* top: 20%; */
  left: 0;
  height: 100%;
  margin:auto; 
  width: 240px;
  transform: translateX(-240px);
  transition: transform 0.3s ease-out;
  z-index: 10;
  display: flex;
  flex-direction: column;
  justify-content: space-around;

}
.spawner-container.open {
  transform: translateX(0);
}

/* Place toggle inside drawer, but fix its vertical position 
   so that top is always the same no matter the drawer height */
.spawner-toggle {
  position: absolute;   /* still inside the drawer hierarchy */
  left: 100%;           /* hug the drawerâ€™s right edge */
  top: 50%;            /* center in the viewport, not the drawer */
  /* transform: translateY(-50%); */
  z-index: 150;

  width: 2rem;
  height: 4rem;
  background-color: #20202088;
  color: #fff;
  border: none;
  border-radius: 0 0.5rem 0.5rem 0;
  cursor: pointer;
  font-size: 1.2rem;
  line-height: 1;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);
  display: flex;
  /* justify-content: space-around; */
  padding: 1em 2em 1em 1em;
  align-items: center;
}


.spawner-toggle:focus {
  outline: none;
}



.toggle-button:hover, .spawner-toggle:hover{
  background-color: #1d1d1d;
}



/* overlay covers canvas */
.loader-overlay {
  position: absolute;
  top: 0; left: 0; right: 0; bottom: 0;
  background: #000;       /* match your clearColor */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

/* center the spinner + text */
.loader-content {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* a simple CSS spinner */
.spinner {
  width: 48px;
  height: 48px;
  border: 4px solid rgba(255, 255, 255, 0.2);
  border-top-color: #fff;
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

@keyframes spin {
  to { transform: rotate(360deg); }
}

/* percentage text */
.loader-text {
  color: #fff;
  font-size: 1.25rem;
  font-weight: 500;
}
